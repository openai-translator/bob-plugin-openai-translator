name: Bump Version and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag version (e.g., 1.0.0 or v1.0.0)'
        required: true
      message:
        description: 'Tag message'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Determine tag version
        id: determine_version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if [[ $VERSION != v* ]]; then
            VERSION="v$VERSION"
          fi
          VERSION_NUMBER="${VERSION#v}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_ENV

      - name: Update info.json
        run: |
          OLD_VERSION=$(grep '"version":' public/info.json | awk -F\" '{print $4}')
          sed -i "s/$OLD_VERSION/${{ env.VERSION_NUMBER }}/" public/info.json

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - run: bun install

      - name: Package plugin and update appcast
        env:
          VERSION_NUMBER: ${{ env.VERSION_NUMBER }}
          MESSAGE: ${{ github.event.inputs.message }}
        run: |
          bun run release "$VERSION_NUMBER" "$MESSAGE"

      - name: Commit files
        run: |
          git commit -a -m 'chore: update appcast.json and info.json'

      - name: Create tag
        env:
          VERSION: ${{ env.VERSION }}
          MESSAGE: ${{ github.event.inputs.message }}
        run: |
          git tag -a "$VERSION" -m "$MESSAGE"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          tags: true

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          release_name: ${{ env.VERSION }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/openai-translator-${{ env.VERSION_NUMBER }}.bobplugin
          asset_name: openai-translator-${{ env.VERSION_NUMBER }}.bobplugin
          tag: ${{ env.VERSION }}
          overwrite: true
          body: ${{ github.event.inputs.message }}